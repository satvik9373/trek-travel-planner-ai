rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own trip requests
    match /tripRequests/{requestId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read and write their own itineraries
    match /itineraries/{itineraryId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read and write their own bookings
    match /bookings/{bookingId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Users can read real-time updates for their itineraries
    match /realTimeUpdates/{updateId} {
      allow read: if request.auth != null;
      allow write: if false; // Only backend can write updates
    }
    
    // Allow reading public data (for caching)
    match /publicData/{document=**} {
      allow read: if true;
      allow write: if false; // Only backend can write public data
    }
  }
}